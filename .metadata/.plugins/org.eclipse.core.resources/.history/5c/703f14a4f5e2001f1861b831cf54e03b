package com.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.dto.TrainRequest;
import com.exception.InvalidTimeException;
import com.model.Train;
import com.repository.TrainRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@Transactional
@RequiredArgsConstructor
public class TrainService {
   
   private final TrainRepository trainRepository;
   

    
    public ResponseEntity<?> addTrain(TrainRequest request, String apiKey) {
     

        // Validate train timings
        if (request.getDepartureTime() != null && request.getArrivalTime() != null &&
            request.getDepartureTime().isAfter(request.getArrivalTime())) {
            throw new InvalidTimeException("Departure time cannot be after arrival time");
        }

        // Check for duplicate train number
        if (trainRepository.existsByTrainNumber(request.getTrainNumber())) {
            throw new DuplicateTrainException("Train with number " + request.getTrainNumber() + " already exists");
        }

        Train train = new Train();
        train.setTrainNumber(request.getTrainNumber());
        train.setTrainName(request.getTrainName());
        train.setSource(request.getSource());
        train.setDestination(request.getDestination());
        train.setTotalSeats(request.getTotalSeats());
        train.setAvailableSeats(request.getTotalSeats());
        train.setDepartureTime(request.getDepartureTime());
        train.setArrivalTime(request.getArrivalTime());

        Train savedTrain = trainRepository.save(train);

        Map<String, Object> response = new HashMap<>();
        response.put("message", "Train added successfully");
        response.put("trainId", savedTrain.getId());
        response.put("trainNumber", savedTrain.getTrainNumber());
        response.put("trainDetails", savedTrain);

        return ResponseEntity.ok(response);
    }

}
